<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Panel" Id="{514e5db3-ac71-4add-977b-df9fa295436c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Panel
VAR_INPUT
	dr: REFERENCE TO FB_Director;
END_VAR

VAR
	hwPE_Seta					AT %I*	: BOOL;
	hwPOC_PulsadorReset			AT %I*	: BOOL; // POC Botón azul está pulsado (PO Conectada)
	hwPM_PulsadorMarcha			AT %I*	: BOOL; // PM - Pulsador de marcha (verde)
	hwLM_LamparaMarcha			AT %Q*	: BOOL; // LM - Lámpara marcha (verde)
	hwPS_PulsadorStop			AT %I*	: BOOL; // PS - Pulsador de parada (rojo)
	hwLS_LamparaStop			AT %Q*	: BOOL; // DUDAS - LA - Lámpara de alarma o lámpara de stop
	hwSM_SelecAutoManual	 	AT %I*	: BOOL; // SM - Selector modo auto/man
	
	hwAS_AvisadorSonoro			AT %Q*	: BOOL; // AS - Avisador Sonoro
	hwLA_LamparaAlarma			AT %Q*	: BOOL; // DUDAS - Es lo mismo que falta de material?
	hwDPO_DesconectaPO			AT %Q*	: BOOL; // DPO - Desconecta PO	
	
	FP_PM								: R_TRIG;
END_VAR


VAR_OUTPUT

	// consignas del panel, resultado de integrar la información que viene del hardware, el estado GEMMA, los temporizadores y flancos, y la interfaz de usuario		
	cnD1_Emergencia					: BOOL; // pulsar la seta
	cnA2_FinCiclo					: BOOL;
	cnA3_Estado						: BOOL;
	cnA6_Inicializar				: BOOL;
	cnF1_Empezar					: BOOL;
	cnF1_Reanudar					: BOOL;
	cnF2_Preparar					: BOOL;
	cnF3_Finalizar					: BOOL;
	cnF4_Planta						: BOOL; // modo verificación sin orden
	cnF5_Funcion					: BOOL; // modo verificación ordenada
	cnF6_Probar						: BOOL;
	
	swF5_Alimentar					: BOOL;
	swF5_Situar						: BOOL;
	swF5_Transferir					: BOOL;
	swF5_Cargar						: BOOL;
	swF5_Evacuar					: BOOL;
	swF5_Descargar					: BOOL;
	swF5_Medir						: BOOL;
	swF5_Claridad					: BOOL;
	swF5_Material					: BOOL;
	swF5_Girar						: BOOL;
	swF5_Ejecutar					: BOOL;
	swF5_Ack						: BOOL;
END_VAR

VAR_INPUT
	enA2_FinCiclo					: BOOL;
	enA3_Estado						: BOOL;
	enF1_Empezar					: BOOL;
	enF1_Reanduar					: BOOL;
	enF4_Planta						: BOOL; // consigna F4_Planta habilitada
	enF5_Funcion					: BOOL; // consigna habilitada	
END_VAR
VAR
	swMensaje		: STRING(255) :='';
	
	swPE_Seta						: BOOL;
	ttPE_Seta						: STRING := '';

	swA2_FinCiclo					: BOOL;
	swA3_Estado						: BOOL;
	swA6_Inicializar				: BOOL;

	swF1_Empezar					: BOOL;
	swF1_Reanudar					: BOOL;
	swF2_Preparar					: BOOL;
	swF3_Finalizar					: BOOL;	
	swF4_Planta						: BOOL; // botón en la visualización
	ttF4_Planta						: STRING :='';
	swF4_Avanza						: BOOL := FALSE;
 	swF4_Retroc						: BOOL := FALSE;	
	swF5_Funcion					: BOOL; // botón en la visualización
	enF6_Probar						: BOOL;
	swF6_Probar						: BOOL;
	// TmpReinicio						: TON; 	
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="ProcessCycle" Id="{026a1e81-704d-4f95-ae3e-7d143e02920e}">
      <Declaration><![CDATA[METHOD ProcessCycle : BOOL
VAR_INPUT
	gmModeActual	: E_GEMMA;
	tmReinicio 		: TIME; // = dr.tmTiempoReinicio
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[

//----------------------------------------------------------------- Consiga cnD1_Emergencia
cnD1_Emergencia := hwPE_Seta OR swPE_Seta; 
IF hwPE_Seta THEN
	IF swPE_Seta THEN
		ttPE_Seta := 'Desarmar la seta y desactivar el botón para reinicializar';
	ELSE
		ttPE_Seta := 'Desarmar la seta para reinicializar';		
	END_IF
ELSE
	IF swPE_Seta THEN
		ttPE_Seta := 'Desactivar el botón para reinicializar';
	ELSE
		ttPE_Seta := 'Pulsar la seta o el botón para parada de emergencia';	
	END_IF
END_IF


//----------------------------------------------------------------- F4_Planta
cnF4_Planta := enF4_Planta AND (hwSM_SelecAutoManual OR swF4_Planta);

IF NOT cnF4_Planta AND (hwSM_SelecAutoManual OR swF4_Planta) THEN // consigna no válida
	swF4_Planta := FALSE; // Desactivar el botón
	swMensaje := 'Sólo se puede pasar al modo F4 desde A1, A6, F5, F6 o D2';
	
ELSIF cnF4_Planta THEN // reflejar modo plata en la interfaz		
	swA6_Inicializar := FALSE; // TODO HACER ESTO AL PRINCIPIO PORQUE ASÍ NO SE PUEDE
	swF5_Funcion := FALSE; 
	swF1_Empezar := FALSE; 
	//swMensaje := ''; 
		
	IF hwSM_SelecAutoManual AND swF4_Planta THEN
		ttF4_Planta := 'Mandos directos ativados desde panel físico y visualización';
	ELSIF hwSM_SelecAutoManual THEN	
		ttF4_Planta := 'Mandos directos ativados desde panel físico';
	ELSIF swF4_Planta THEN
		ttF4_Planta := 'Mandos directos ativados desde visualización';
	END_IF	
	swF4_Planta  := TRUE;
					
	// avanza y retrocede son mandos directos excluyentes
	IF swF4_Avanza THEN 
		swF4_Retroc := FALSE;
	ELSIF swF4_Retroc THEN		
		swF4_Avanza := FALSE;
	END_IF		
ELSE
	ttF4_Planta := 'Mandos directos desactivados';
END_IF 


//----------------------------------------------------------------- F5_Funcion
cnF5_Funcion := enF5_Funcion AND (swF5_Funcion);

IF NOT cnF5_Funcion AND swF5_Funcion THEN // consigna no válida
	swF5_Funcion := FALSE; 
	swMensaje := 'Sólo se puede pasar al modo función desde A1, o F4';
		
ELSIF cnF5_Funcion THEN // reflejar modo plata en la interfaz		
	swF1_Empezar := FALSE; 
	swF4_Planta  := FALSE;
	swF5_Funcion := TRUE;
	//swMensaje := ''; 
		
	// funciones incompatibles
	IF swF5_Girar AND (swF5_Cargar OR swF5_Evacuar OR swF5_Descargar OR swF5_Medir) THEN 
		swF5_Girar := FALSE;
		swMensaje := 'No se puede girar a la vez que cargar, evacuar, descargar o medir por riesgo de avería';
	END_IF
	IF swF5_Alimentar AND swF5_Cargar THEN // funciones incompatibles
		swF5_Cargar := FALSE;
		swMensaje := 'No se puede cargar a la vez que alimentar por riesgo de avería';
	END_IF
	IF swF5_Transferir AND swF5_Descargar THEN
		swF5_Transferir := FALSE;
		swMensaje := 'No se puede descargar a la vez que transferer por riesgo de avería';
	END_IF
END_IF 

//----------------------------------------------------------------- Consigna A2_ParaFinCiclo
cnA2_FinCiclo := enA2_FinCiclo AND (swA2_FinCiclo OR hwPS_PulsadorStop);

IF NOT cnA2_FinCiclo AND (swA2_FinCiclo OR hwPS_PulsadorStop) THEN // consigna no válida
	swA2_FinCiclo := FALSE; // si no se puede entrar en el modo hay que desactivar el botón
	swMensaje := 'Sólo se puede pasar a A2 desde el modo F1';

ELSIF cnA2_FinCiclo THEN
	swA2_FinCiclo := TRUE; 
	IF gmModeActual = E_GEMMA.F1ProduccionNormal THEN
		swMensaje := 'Esperando a finalizar el ciclo para parar';
	ELSIF gmModeActual = E_GEMMA.A4ParadaObtenida THEN
		swMensaje := 'Parada obtenida después de acabar el ciclo';
	END_IF
END_IF 


//----------------------------------------------------------------- Consigna A3_Estado
cnA3_Estado := enA3_Estado AND (swA3_Estado);

IF NOT cnA3_Estado AND (swA3_Estado) THEN // consigna no válida
	swA3_Estado := FALSE; // si no se puede entrar en el modo hay que desactivar el botón
	swMensaje := 'Sólo se puede pasar a A3 desde el modo F1, F5 o A2';

ELSIF cnA3_Estado THEN
	swA3_Estado := TRUE; 
	IF gmModeActual = E_GEMMA.A4ParadaObtenida THEN
		swMensaje := 'Parada obtenida después de alcanzar un estado estable';
	ELSE
		swMensaje := 'Esperando a un estado estable para parar';
	END_IF
END_IF


//----------------------------------------------------------------- Consigna F1_Reanudar
cnF1_Reanudar := enF1_Reanduar AND (swF1_Reanudar OR hwPM_PulsadorMarcha);
 	
IF NOT cnF1_Reanudar AND (swF1_Reanudar OR hwPM_PulsadorMarcha) THEN // consigna no válida
	swF1_Reanudar := FALSE; // si no se puede entrar en el modo hay que desactivar el botón
	swMensaje := 'Sólo se puede reanudar desde una parada';

ELSIF cnF1_Reanudar THEN
	swMensaje := 'Reanundando tras la parada';
END_IF


//----------------------------------------------------------------- Consigna A6_Inicializar
// TmpReinicio(IN := hwPM_PulsadorMarcha AND NOT hwPS_PulsadorStop, PT:= tmReinicio);
cnA6_Inicializar := (swA6_Inicializar);//  OR TmpReinicio.Q);
IF cnA6_Inicializar THEN
	swF5_Funcion := FALSE;
	swF4_Planta := FALSE;
END_IF


//----------------------------------------------------------------- Consigna F1_Empezar
FP_PM(CLk := hwPM_PulsadorMarcha);
cnF1_Empezar := enF1_Empezar AND (swF1_Empezar OR FP_PM.Q);
IF NOT cnF1_Empezar AND (swF1_Empezar OR FP_PM.Q) THEN // consigna no válida
	swF1_Empezar := FALSE; // si no se puede entrar en el modo hay que desactivar el botón
	swMensaje := 'Sólo se puede empezar desde una parada';
END_IF

cnF2_Preparar:= swF2_Preparar;
cnF3_Finalizar:= swF3_Finalizar;

//----------------------------------------------------------------- Señales
hwAS_AvisadorSonoro := 
	gmModeActual = E_GEMMA.F3SecuenciaFinalizacion OR
	(
		(
			gmModeActual = E_GEMMA.D1ParadaEmergencia OR
			gmModeActual = E_GEMMA.D2TratamientoFallos OR 
			gmModeActual = E_GEMMA.F2SecuenciaPreparacion 
		) AND FALSE
	); //  TODO - TERMINAR LA IMPLENTACIÓN CON EL RELOJ - CLK.Q;
	
hwLA_LamparaAlarma := 
	gmModeActual = E_GEMMA.A6Inicializando OR
	(
		(
			gmModeActual = E_GEMMA.D1ParadaEmergencia OR
			gmModeActual = E_GEMMA.D2TratamientoFallos
		) 
		AND TRUE
	);  //  TODO - TERMINAR LA IMPLENTACIÓN CON EL RELOJ - CLK.Q;

hwLM_LamparaMarcha := 	
	gmModeActual = E_GEMMA.A2ParaFinCiclo OR
	gmModeActual = E_GEMMA.F1ProduccionNormal OR
	gmModeActual = E_GEMMA.F2SecuenciaPreparacion OR
	gmModeActual = E_GEMMA.F3SecuenciaFinalizacion OR
	(
		gmModeActual = E_GEMMA.A1ParadaInicial AND TRUE 
	);  //  TODO - TERMINAR LA IMPLENTACIÓN CON EL RELOJ - CLK.Q; 
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>