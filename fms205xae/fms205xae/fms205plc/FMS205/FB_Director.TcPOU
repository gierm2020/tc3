<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Director" Id="{7ba3b411-03e2-4744-bc96-6b241362c795}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Director
VAR_INPUT
	fbPanel: FB_Panel; 	// estado del panel de control

	IC: BOOL; 			// todos los módulos están en condiciones iniciales
    Preparada: BOOL;	// la estación está preparada después de encender
	FinCiclo: BOOL;		// una pieza se ha completado
	FinTarea: BOOL;		// el lote se ha completado
	Fallo: BOOL; 		// al menos un módulo ha fallado
    Finalizada: BOOL;	// la estación está lista para apagarse    
    
    // Marcha: BOOL; // se pulsa el botón de marcha, empezar a producir
    // Cancela: BOOL; (**)
    // Continua: BOOL; (**)
    // Emergencia: BOOL;
    // Manual: BOOL;
    // Para: BOOL; (* Detiene la produccion a final del ciclo *)
    // Reinicia: BOOL;
    // Restaurada: BOOL;
END_VAR
VAR_OUTPUT
	// HayRestaurar	: BOOL; // Estación restaurándose al estado inicial
    // HayProducir		: BOOL; // Estacion en produccion 
	
    Modo: E_GEMMA := E_GEMMA.A6Inicializando; 		// Modo actual
    Previo: E_GEMMA := E_GEMMA.A6Inicializando; 	// Modo anterior
    Parada: BOOL; (* Procedimientos de parada *)
    Funcionamiento: BOOL; (* Procedimientos de funcionamiento*)
    Defecto: BOOL; (* Procedimientos de defecto *)
	// Pausa: BOOL;
	
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Este código debería estar después de los cambios de estado 	

Parada := (Modo >= E_GEMMA.A1ParadaInicial) AND (Modo <= E_GEMMA.A7SituandoEstado);
Funcionamiento:= (Modo >= E_GEMMA.F1ProduccionNormal) AND (Modo <= E_GEMMA.F6Probando);
Defecto := (Modo >= E_GEMMA.D1ParadaEmergencia) AND (Modo <= E_GEMMA.D3ProducirConFallos);
Produccion := (Modo = E_GEMMA.A2ParaFinCiclo) OR (Modo = E_GEMMA.A3ParadaEstado) OR (Modo = E_GEMMA.F1ProduccionNormal)
    OR (Modo = E_GEMMA.F2SecuenciaPreparacion) OR (Modo = E_GEMMA.F3SecuenciaFinalizacion) OR (Modo = E_GEMMA.F5VerificacionOrdenada)
    OR (Modo = E_GEMMA.F6Probando) OR (Modo = E_GEMMA.D3ProducirConFallos);
Pausa := (Modo = E_GEMMA.A3ParadaEstado) OR (Modo = E_GEMMA.A4ParadaObtenida) OR (Modo = E_GEMMA.A5PreparandoTrasFallo)
    OR (Modo = E_GEMMA.D1ParadaEmergencia) OR (Modo = E_GEMMA.D2TratamientoFallos);
	
*)
	
(* FUNCION DE ESTADO *)
IF fbPanel.Emergencia THEN
    Modo := E_GEMMA.D1ParadaEmergencia;
	
	
ELSIF fbPanel.Reinicia THEN
    Modo := E_GEMMA.A6Inicializando;


ELSE
    CASE Modo OF
		
	
        (* ------------------------------------------------------------ Procedimientos de parada *)
		
        E_GEMMA.A1ParadaInicial: (* Parada en el estado inicial *)
            IF NOT IC THEN // IF NOT Restaurada THEN
                Modo := E_GEMMA.A6Inicializando;
            ELSIF fbPanel.Manual THEN
                Modo := E_GEMMA.F4VerificacionSinOrden;
            ELSIF fbPanel.Marcha AND IC THEN  // ELSIF Marcha THEN
                Modo := E_GEMMA.F2SecuenciaPreparacion;
			ELSE
				; // Esperar a que se pulse el bortón de marcha
            END_IF
			
        E_GEMMA.A2ParaFinCiclo: (* Parada solicitada a final de ciclo *)
            IF Fallo THEN
                Previo := E_GEMMA.A2ParaFinCiclo;
                Modo := E_GEMMA.D2TratamientoFallos;
            ELSIF FinCiclo THEN
                Modo := E_GEMMA.A1ParadaInicial;
            ELSE
                // Seguir produciendo hasta final de ciclo
                ;
            END_IF
			
        E_GEMMA.A3ParadaEstado: (* Parada solicitada en un estado determinado *)
            ; // estado no tratado en la FMS205
			
        E_GEMMA.A4ParadaObtenida: (* Parada obtenida *)
            ; // estado no tratado en la FMS205
        
		E_GEMMA.A5PreparandoTrasFallo: (* Preparando de reanudacion tras el fallo *)
            IF fbPanel.Marcha THEN // Continua
                Modo := Previo;
            ELSIF fbPanel.Para THEN // Cancela
                Modo := E_GEMMA.A6Inicializando;
            END_IF
			
        E_GEMMA.A6Inicializando: (* Situando la PO en el estado inicial *)
            IF IC THEN // Restaurada
                Modo := E_GEMMA.A1ParadaInicial;
            ELSIF fbPanel.Manual THEN
                Modo := E_GEMMA.F4VerificacionSinOrden;
            END_IF
			
        E_GEMMA.A7SituandoEstado: (* Situando la PO en un estado determinado *)
            ; // estado no tratado en la FMS205

			
			
        (* ------------------------------------------------------------ Procedimientos de funcionamiento *)
        
		E_GEMMA.F1ProduccionNormal: (* Produccion normal *)
            IF Fallo THEN
                Previo := E_GEMMA.A2ParaFinCiclo; //!!! Creo que está mal, no debería ser F1?
                Modo := E_GEMMA.D2TratamientoFallos;
            ELSIF FinTarea THEN
                Modo := E_GEMMA.F3SecuenciaFinalizacion;
            ELSIF fbPanel.Para THEN
                Modo := E_GEMMA.A2ParaFinCiclo;
            END_IF
			
        E_GEMMA.F2SecuenciaPreparacion: (* Secuencia de preparacion *)
            IF Preparada THEN
                Modo := E_GEMMA.F1ProduccionNormal;
            ELSE
                // continuar con la secuencia de preparación hasta que esté preparada o haya un error
                ;
            END_IF
			
        E_GEMMA.F3SecuenciaFinalizacion: (* Secuencia de finalizacion *)
            IF Finalizada THEN
                Modo := E_GEMMA.A1ParadaInicial;
            ELSE
                // continuar con la secuencia de finalización hasta que esté finalizada o haya un error
                ;
            END_IF
			
        E_GEMMA.F4VerificacionSinOrden: (* Verificacion sin orden *)
            IF Fallo THEN
                Previo := E_GEMMA.A2ParaFinCiclo; //!!! Creo que está mal, no debería ser F4?
                Modo := E_GEMMA.D2TratamientoFallos;
            ELSIF NOT fbPanel.Manual THEN
                Modo := E_GEMMA.A6Inicializando; // después del modo manual, volver a inicializar
            ELSE
                // Seguir en modo manual hasta que halla un fallo o se vuelva al modo automático
                ;
            END_IF
			
        E_GEMMA.F5VerificacionOrdenada: (* Verificacion en orden *)
            ; // estado no tratado en la FMS205
			
        E_GEMMA.F6Probando: (* Prueba *)
            ; // estado no tratado en la FMS205

			
			
        (* ------------------------------------------------------------ Procedimientos de defecto *)
        E_GEMMA.D1ParadaEmergencia: (* Parada de emergencia *)
            IF NOT fbPanel.Emergencia THEN
                Modo := E_GEMMA.A6Inicializando; // Al quitar la parada de emergencia hay que reinicializar la estación
            ELSE
                // Esperar a que se quite la parada de emergencia
                ;
            END_IF
			
        E_GEMMA.D2TratamientoFallos: (* Diagnostico/tratamiento de los fallos *)
            IF NOT Fallo THEN
                Modo := E_GEMMA.A5PreparandoTrasFallo;
            ELSE
                // Esperar a que se resuelva el fallo
                ;
            END_IF

        E_GEMMA.D3ProducirConFallos: (* Produccion a pesar de los fallos *)
            ; // estado no tratado en la FMS205

    END_CASE
END_IF

(* PARAMETROS DE SALIDA *)
Parada := (Modo >= E_GEMMA.A1ParadaInicial) AND (Modo <= E_GEMMA.A7SituandoEstado);
Funcionamiento:= (Modo >= E_GEMMA.F1ProduccionNormal) AND (Modo <= E_GEMMA.F6Probando);
Defecto := (Modo >= E_GEMMA.D1ParadaEmergencia) AND (Modo <= E_GEMMA.D3ProducirConFallos);

	
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>