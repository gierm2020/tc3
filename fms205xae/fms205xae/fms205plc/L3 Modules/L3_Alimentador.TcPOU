<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="L3_Alimentador" Id="{c5b5144c-73a3-412e-b858-b842aecaf92f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK L3_Alimentador EXTENDS L1_ModuleBase
(*  MÓDULO ALIMENTACIÓN - Manual de usuario #31/27

Para el almacenamiento y posterior alimentación de las tapas, se utiliza un 
cargador de gravedad, provisto de un empujador accionado mediante cilindro 
neumático que realiza la extracción  *)
VAR_INPUT
	Alimentar		: BOOL;
END_VAR

VAR_OUTPUT	
	fbController	: L2_Alimentador_SFC:=(dr:=dr);	
	k1 				: L1_Sensor;
	K_1 			: L1_Actuator;
	FM 				: L1_Actuator; 
	_TapaAlimentada	: BOOL;
	FaltaMaterial	: BOOL;
	Position		: REAL:= 0;
END_VAR

VAR CONSTANT
	MaxPosition		: REAL := 100;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="ProcessCycle" Id="{d7358fc0-6ede-496b-926f-c7f1a8440317}">
      <Declaration><![CDATA[METHOD ProcessCycle : BOOL 
VAR_INPUT	
	dr			: REFERENCE TO L1_Director;
	tapas		: REFERENCE TO L6_Tapas;
		
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF dr.gmModeActual = L1_GEMMA.A6Inicializando THEN
	_TapaAlimentada 			:= FALSE;
	FaltaMaterial				:= FALSE;
ELSE
	// Sensores y condiciones iniciales
	k1.ProcessCycle(LocalHost:=dr.gmLocalHost, sfcValue=>fbController.k1);
	IC:=TRUE; 

	// Controlador
	fbController.ProcessCycle(dr.gmModeActual);
	fbController(Alimentar:=Alimentar, dr:=dr, IC:=IC, Execute:=Execute, Ack:=Ack, Ready=>Ready, Done=>Done);
	
	// Actuadores y actualización de tapas
	IF Ready AND NOT _TapaAlimentada THEN 
		Position := 0;												// Inicialmente la posición es arriba
	ELSIF Done AND NOT fbController.Performed AND Alimentar THEN
		fbController.Performed 	:= TRUE;
		FaltaMaterial			:= k1.uiValue;
		_TapaAlimentada 		:= NOT FaltaMaterial;
		Position				:= MaxPosition;						// Posición final junto al brazo de carga 
	ELSIF fbController.Executing AND Position < MaxPosition AND Alimentar THEN
		Position := Position + 1;									// animación de tapa moviendo hacia abajo		
	END_IF	
	K_1.ProcessCycle(gmMode:=dr.gmModeActual, sfcValue:=fbController.K_1);
	FM.ProcessCycle (gmMode:=dr.gmModeActual, sfcValue:=FaltaMaterial AND dr.Tic); //fbController.FM);
	//FM.ForceValue(FaltaMaterial AND dr.Tic); 
	//tapas.PostAlime(Ready:=Ready, Done:=Done, FM:=FM.uiValue);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="TapaAlimentada" Id="{3e98cc31-41f2-41e3-88a6-6de609790e5c}">
      <Declaration><![CDATA[PROPERTY TapaAlimentada : bool]]></Declaration>
      <Get Name="Get" Id="{71c03367-61a5-4cf3-9ad9-347a77c91cac}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[TapaAlimentada := _TapaAlimentada;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{57645043-f2bc-4b20-a856-ab30ddda755a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_TapaAlimentada := TapaAlimentada;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>