<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="L3_PickAndPlace" Id="{0acadc22-7b10-494f-8323-7cb38d3e0455}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK L3_PickAndPlace EXTENDS L1_ModuleBase
(* ESTACIÓN DE CARGA - Manual de usuario #31/27 
La alimentación de material descrita en el punto anterior realiza el suministro 
de tapas que posteriormente serán montadas en el conjunto preparado en 
el palet. Sin embargo, tras esta fase resulta necesario realizar la carga de 
la tapa sobre el plato divisor. 

Para ello se ha dispuesto el manipulador de la imagen, compuesto por un cilindro 
rotolineal, encargado de realizar la elevación y posterior giro de un brazo con una pinza 
de dos dedos de apertura paralela. El giro de 180º realizado por este elemento, sitúa 
la pinza sobre el punto exacto de descarga de la tapa en la primera estación del plato 
divisor.

ESTACIÓN DE INSERCIÓN TAPA - Manual de usuario #33/29
Al igual que sucedía en la estación de inserción de eje, la última de las estaciones está encargada 
del montaje de la tapa sobre el conjunto retenido en la cinta transportadora.

Como puede observarse en la imagen, el manipulador previsto para realizar esta tarea 
presenta idénticas características que el utilizado para depositar la tapa sobre el plato divisor. 
Dispone de una pinza de apertura paralela para sujetar la tapa, que es elevada y desplazada 
realizando un giro hasta el punto de descarga mediante un actuador neumático rotolineal. *)

VAR_INPUT
	Mover			:BOOL;
END_VAR

VAR_OUTPUT
	fbController	: L2_PickAndPlace_SFC:=(dr:=dr); 
	h0 				: L1_Sensor := (uiValue:= TRUE);
	h1 				: L1_Sensor := (uiValue:= TRUE);
	v1 				: L1_Sensor := (uiValue:= TRUE);
	v0 				: L1_Sensor := (uiValue:=TRUE);
	HOR 			: L1_Actuator;
	VER 			: L1_Actuator;
	PIN 			: L1_Actuator;
	//_TapaMovida		: BOOL;
	Position		: REAL:= 0;	
END_VAR

VAR CONSTANT
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="ProcessCycle" Id="{ad50b7d3-ffb1-4d5e-9f1d-9c4b9b9b584c}">
      <Declaration><![CDATA[METHOD ProcessCycle : BOOL
VAR_INPUT
	dr			: REFERENCE TO L1_Director;
	tapas		: REFERENCE TO L6_Tapas;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF dr.gmModeActual = L1_GEMMA.A6Inicializando THEN
	;//_TapaMovida	 				:= FALSE;
ELSE
	// Sensores y condiciones iniciales
	h0.ProcessCycle(LocalHost:=dr.gmLocalHost, sfcValue=>fbController.h0);
	h1.ProcessCycle(LocalHost:=dr.gmLocalHost, sfcValue=>fbController.h1);
	v0.ProcessCycle(LocalHost:=dr.gmLocalHost, sfcValue=>fbController.v0);
	v1.ProcessCycle(LocalHost:=dr.gmLocalHost, sfcValue=>fbController.v1);
	IC := v0.uiValue AND h0.uiValue; // el brazo está en condiciones iniciales cuando está arriba y retraído

	// Controlador
	fbController.ProcessCycle(dr.gmModeActual);
	fbController(Mover := Mover,
		dr:=dr, IC:=IC, Execute:=Execute, Ack:=Ack, Ready=>Ready, Done=>Done);
		
	// Actuadores y actualización de tapas		
	IF Ready AND Mover THEN // NOT _TapaMovida THEN 
		tapas.MoverPickAndPlace(Name:=Name, Delta:=0);// 	Position := 0;												// Inicialmente la posición es arriba
	ELSIF Done AND NOT fbController.Performed AND Mover THEN
		fbController.Performed	:= TRUE;
		//_TapaMovida				:= TRUE;
		tapas.MoverPickAndPlace(Name:=Name, Delta:=MoverMax); // //Position				:= MaxPosition;
		tapas.PostPickAndPlace(Name:=Name);  // actualizar las tapas según el nombre de brazo sea "Carga" o "Descarga"
		//IF Name='Carga' THEN
		//	tapas.PostCarga();
		//ELSE // descarga
		//	tapas.PostDesca();
		//END_IF
	ELSIF fbController.Executing AND Mover THEN // position < MaxPosition AND 
		tapas.MoverPickAndPlace(Name:=Name, Delta:=1); //Position				:= Position+1;				
	END_IF
	HOR.ProcessCycle(gmMode:=dr.gmModeActual, sfcValue:=fbController.HOR);
	VER.ProcessCycle(gmMode:=dr.gmModeActual, sfcValue:=fbController.VER);
	PIN.ProcessCycle(gmMode:=dr.gmModeActual, sfcValue:=fbController.PIN);
END_IF
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>