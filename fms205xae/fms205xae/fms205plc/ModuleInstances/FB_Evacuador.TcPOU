<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Evacuador" Id="{50116491-c91a-4b60-887b-578d95c086cb}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Evacuador EXTENDS FB_Module
(* 
ESTACIÓN DE EVACUACIÓN DE TAPA INCORRECTA - Manual de usuario #33/29

En caso de que la tapa que llegue a la penúltima de las estaciones del plato divisor, tras haber pasado por 
los diferentes sensores encargados de determinar su material y su altura, no coincida con lo indicado por el 
controlador central encargado de planificar la producción, ha de ser rechazada. Para ello se ha dispuesto en esta 
estación un manipulador de dos ejes que en caso de recibir la orden correspondiente, recoge la tapa del plato 
divisor y la deposita sobre una rampa de evacuación.

Los componentes que forman parte de este manipulador son dos cilindros neumáticos de vástagos paralelos a modo de ejes, 
sobre los que se ha fijado como elemento terminal una placa con tres ventosas para sujeción por vacío

*)

VAR_INPUT
	Evacuar			: BOOL;	
END_VAR

VAR_OUTPUT
	fbController	: FB_Evacuador_SFC:=(dr:=dr); 		// Controlador
	f0 				: dvSensor := (dr:=dr);				// Sensores
	f1 				: dvSensor := (dr:=dr);
	g0 				: dvSensor := (dr:=dr);
	v1 				: dvSensor := (dr:=dr);	
	F_0				: dvActuator := (dr:=dr);			// Actuadores
	F_1				: dvActuator := (dr:=dr);
	G_1				: dvActuator := (dr:=dr);
	V_1				: dvActuator := (dr:=dr);
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[
]]></ST>
    </Implementation>
    <Method Name="ProcessCycle" Id="{088423ab-0767-49f6-96df-c713fe6fe249}">
      <Declaration><![CDATA[METHOD ProcessCycle : BOOL 
VAR_INPUT
	dr			: REFERENCE TO FB_Director;
	tapas		: REFERENCE TO FB_Tapas;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Sensores y condiciones iniciales
f0.ProcessCycle(dr:=dr, sfcValue=>fbController.f0);
f1.ProcessCycle(dr:=dr, sfcValue=>fbController.f1);
g0.ProcessCycle(dr:=dr, sfcValue=>fbController.g0);
v1.ProcessCycle(dr:=dr, sfcValue=>fbController.v1);
IC := f1.hwValue; // el evacuador está en condiciones iniciales cuando el sensor f1 está activado

// Controlador
fbController.PauseAndReset(dr.gmModeActual);
fbController(
	Evacuar	:= Evacuar,
	dr:=dr, IC:=IC, Execute:=Execute, Ack:=Ack, Ready=>Ready, Done=>Done);

// Actuadores y actualización de tapas		
F_0.ProcessCycle(dr:=dr, sfcValue:=fbController.F_0);
F_1.ProcessCycle(dr:=dr, sfcValue:=fbController.F_1);
G_1.ProcessCycle(dr:=dr, sfcValue:=fbController.G_1);
V_1.ProcessCycle(dr:=dr, sfcValue:=fbController.V_1);
tapas.Evacuado(Done:=Done, Evacuar:=Evacuar);
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>