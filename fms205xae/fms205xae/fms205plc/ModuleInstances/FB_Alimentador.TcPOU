<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Alimentador" Id="{c5b5144c-73a3-412e-b858-b842aecaf92f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Alimentador EXTENDS FB_Module
(*
MÓDULO ALIMENTACIÓN - Manual de usuario #31/27

Para el almacenamiento y posterior alimentación de las tapas, se utiliza un 
cargador de gravedad, provisto de un empujador accionado mediante cilindro 
neumático que realiza la extracción 

*)

VAR
	(* Controlador  específico *)
	fbController: FB_Alimentador_SFC;

	(* Temporizadores específicos *)
	TK_1: TIME := T#1S;	

	(* Sensores específicos *)
	k1 AT %I*: BOOL; (* Se corresponde con empujador tapa delante c1 *)

	(* Actuadores específicos *)
	K_1 AT %Q*: BOOL; (* Se corresponde con el cTAP *)
	FM AT %Q*: BOOL;  (* Se corresponde con el zFM *)
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="ModuleControlFlow" Id="{d7358fc0-6ede-496b-926f-c7f1a8440317}">
      <Declaration><![CDATA[METHOD ModuleControlFlow : BOOL 
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbController(
	TK_1 	:= TK_1,
	
	ctInp 	:= ctInp, 
	k1 		:= k1,
	
	ctOut 	=> ctOut);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="ModulePerformActions" Id="{355ba2a1-3d02-4714-aad4-f747202fae09}">
      <Declaration><![CDATA[METHOD ModulePerformActions : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// el alimentador está en condiciones iniciales si k1 está desactivado
ctOut.IC := NOT k1; 

// si no eestamos en modo manual, actualizar los actuadores con el estado del controlador
IF NOT ctInp.Manual THEN
	K_1 := fbController.K_1;
END_IF

// el actuador de falta de material es independiente del modo manual
FM := fbcontroller.FM;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>