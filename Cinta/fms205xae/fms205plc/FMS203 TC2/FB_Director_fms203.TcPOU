<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Director_fms203" Id="{ebf5bc7e-7b01-435a-a28f-d27ceb644bff}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Director_fms203
(*
Implementacion del grafcet de conducion (GC).

Grafico Descriptivo de los Modos de Marcha y Parada (GDMMA)

Copyright (c) 2020 victortorreslopez

GNU General Public License

Historia de modificaciones
--------------------------
0.1, 23/10/2020, VTL: revision
0.0, 16/10/2020, VTL: creacion
*)
VAR_INPUT
    Cancela: BOOL; (**)
    Continua: BOOL; (**)
    Emergencia: BOOL;
    Fallo: BOOL; (**)
    Finalizada: BOOL;
    FinTarea: BOOL;
    FinCiclo: BOOL;
    Manual: BOOL;
    Marcha: BOOL;
    Para: BOOL; (* Detiene la produccion a final del ciclo *)
    Preparada: BOOL;
    Reinicia: BOOL;
    Restaurada: BOOL;
END_VAR
VAR_OUTPUT
    Modo: E_GEMMA := E_GEMMA.A6Inicializando;
    Defecto: BOOL; (* Procedimientos de defecto *)
    Funcionamiento: BOOL; (* Procedimientos de funcionamiento*)
    Parada: BOOL; (* Procedimientos de parada *)
    Pausa: BOOL;
    Produccion: BOOL; (* Estacion en produccion *)
END_VAR
VAR
    Previo: E_GEMMA; (* Modo anterior *)
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* PARAMETROS DE SALIDA *)
Defecto := (Modo >= E_GEMMA.D1ParadaEmergencia) AND (Modo <= E_GEMMA.D3ProducirConFallos);
Funcionamiento:= (Modo >= E_GEMMA.F1ProduccionNormal) AND (Modo <= E_GEMMA.F6Probando);
Parada := (Modo >= E_GEMMA.A1ParadaInicial) AND (Modo <= E_GEMMA.A7SituandoEstado);

Pausa := (Modo = E_GEMMA.A3ParadaEstado) OR (Modo = E_GEMMA.A4ParadaObtenida) OR (Modo = E_GEMMA.A5PreparandoTrasFallo)
    OR (Modo = E_GEMMA.D1ParadaEmergencia) OR (Modo = E_GEMMA.D2TratamientoFallos);
Produccion := (Modo = E_GEMMA.A2ParaFinCiclo) OR (Modo = E_GEMMA.A3ParadaEstado) OR (Modo = E_GEMMA.F1ProduccionNormal)
    OR (Modo = E_GEMMA.F2SecuenciaPreparacion) OR (Modo = E_GEMMA.F3SecuenciaFinalizacion) OR (Modo = E_GEMMA.F5VerificacionOrdenada)
    OR (Modo = E_GEMMA.F6Probando) OR (Modo = E_GEMMA.D3ProducirConFallos);

(* FUNCION DE ESTADO *)
IF Emergencia THEN
    Modo := E_GEMMA.D1ParadaEmergencia;
ELSIF Reinicia THEN
    Modo := E_GEMMA.A6Inicializando;
ELSE
    CASE Modo OF
        (* Procedimientos de parada *)
        E_GEMMA.A1ParadaInicial: (* Parada en el estado inicial *)
            IF NOT Restaurada THEN
                Modo := E_GEMMA.A6Inicializando;
            ELSIF Manual THEN
                Modo := E_GEMMA.F4VerificacionSinOrden;
            ELSIF Marcha THEN
                Modo := E_GEMMA.F2SecuenciaPreparacion;
            END_IF
        E_GEMMA.A2ParaFinCiclo: (* Parada solicitada a final de ciclo *)
            IF Fallo THEN
                Previo := E_GEMMA.A2ParaFinCiclo;
                Modo := E_GEMMA.D2TratamientoFallos;
            ELSIF FinCiclo THEN
                Modo := E_GEMMA.A1ParadaInicial;
            ELSE
                (* En este caso no es necesario que suceda nada! *)
                ;
            END_IF
        E_GEMMA.A3ParadaEstado: (* Parada solicitada en un estado determinado *)
            ;
        E_GEMMA.A4ParadaObtenida: (* Parada obtenida *)
            ;
        E_GEMMA.A5PreparandoTrasFallo: (* Preparando de reanudacion tras el fallo *)
            IF Continua THEN
                Modo := Previo;
            ELSIF Cancela THEN
                Modo := E_GEMMA.A6Inicializando;
            END_IF
        E_GEMMA.A6Inicializando: (* Situando la PO en el estado inicial *)
            IF Restaurada THEN
                Modo := E_GEMMA.A1ParadaInicial;
            ELSIF Manual THEN
                Modo := E_GEMMA.F4VerificacionSinOrden;
            END_IF
        E_GEMMA.A7SituandoEstado: (* Situando la PO en un estado determinado *)
            ;

        (* Procedimientos de funcionamiento *)
        E_GEMMA.F1ProduccionNormal: (* Produccion normal *)
            IF Fallo THEN
                Previo := E_GEMMA.A2ParaFinCiclo;
                Modo := E_GEMMA.D2TratamientoFallos;
            ELSIF FinTarea THEN
                Modo := E_GEMMA.F3SecuenciaFinalizacion;
            ELSIF Para THEN
                Modo := E_GEMMA.A2ParaFinCiclo;
            END_IF
        E_GEMMA.F2SecuenciaPreparacion: (* Secuencia de preparacion *)
            IF Preparada THEN
                Modo := E_GEMMA.F1ProduccionNormal;
            ELSE
                (* En este caso no es necesario que suceda nada! *)
                ;
            END_IF
        E_GEMMA.F3SecuenciaFinalizacion: (* Secuencia de finalizacion *)
            IF Finalizada THEN
                Modo := E_GEMMA.A1ParadaInicial;
            ELSE
                (* En este caso no es necesario que suceda nada! *)
                ;
            END_IF
        E_GEMMA.F4VerificacionSinOrden: (* Verificacion sin orden *)
            IF Fallo THEN
                Previo := E_GEMMA.A2ParaFinCiclo;
                Modo := E_GEMMA.D2TratamientoFallos;
            ELSIF NOT Manual THEN
                Modo := E_GEMMA.A6Inicializando;
            ELSE
                (* En este caso no es necesario que suceda nada! *)
                ;
            END_IF
        E_GEMMA.F5VerificacionOrdenada: (* Verificacion en orden *)
            ;
        E_GEMMA.F6Probando: (* Prueba *)
            ;

        (* Procedimientos de defecto *)
        E_GEMMA.D1ParadaEmergencia: (* Parada de emergencia *)
            IF NOT Emergencia THEN
                Modo := E_GEMMA.A6Inicializando;
            ELSE
                (* En este caso no es necesario que suceda nada! *)
                ;
            END_IF
        E_GEMMA.D2TratamientoFallos: (* Diagnostico/tratamiento de los fallos *)
            IF NOT Fallo THEN
                Modo := E_GEMMA.A5PreparandoTrasFallo;
            ELSE
                (* En este caso no es necesario que suceda nada! *)
                ;
            END_IF

        E_GEMMA.D3ProducirConFallos: (* Produccion a pesar de los fallos *)
            ;
    END_CASE
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>